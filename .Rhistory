loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
startYear = "2020"
startMonth = "03"
startDay = 05
endDay = 06
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
}
load("~/DScourseS20/TwitterProject/Candidates.Rda")
library(tidyverse)
library(sentimentr)
#Set date range of files to clean
startYear = "2020"
startMonth = "03"
startDay = 04
endDay = 07
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
}
load("~/DScourseS20/TwitterProject/Candidates.Rda")
library(tidyverse)
library(sentimentr)
#Set date range of files to clean
startYear = "2020"
startMonth = "03"
startDay = 05
endDay = 05
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
}
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
for (k in my_files){
load(my_files[k])
}
}
my_files[1]
load(my_files[1])
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
for (k in my_files){
load(my_files[k])
}
}
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
for (k in my_files){
load(k)
}
}
load("~/DScourseS20/TwitterProject/Candidates.Rda")
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
for (k in my_files){
load(k)
for (l in tweets){
if(starts_with(k, tweets$tag[l])){
print(tweets$candidate[l])
}
}
}
}
starts_with(k)
starts_with(k,"biden")
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
for (k in my_files){
load(k)
for (l in tweets){
if(startsWith(k, tweets$tag[l])){
print(tweets$candidate[l])
}
}
}
}
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
for (k in my_files){
load(k)
for (l in tweets){
if(startsWith(k, as.character(tweets$tag[l]))){
print(tweets$candidate[l])
}
}
}
}
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
for (k in my_files){
load(k)
for (l in tweets){
if(startsWith(k, as.character(tweets$tag[l]))==TRUE){
print(tweets$candidate[l])
}
}
}
}
startsWith(k,"biden")
as.character(tweets$tag[1])
as.character(tweets$tag[l])
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
for (k in my_files){
load(k)
for (row in tweets){
if(startsWith(k, as.character(tweets$tag[row]))){
print(tweets$candidate[l])
}
}
}
}
for (j in startDay:endDay) {
loopDate = paste0(startYear,"-",startMonth,"-",formatC(j, width = 2, format ="d", flag = "0"))
setwd("~/DScourseS20/TwitterProject/RawTweets")
loopFile = paste0(loopDate,".Rda")
my_files <- list.files(pattern = loopFile)
for (k in my_files){
load(k)
for (row in 1:nrow(tweets)){
if(startsWith(k, as.character(tweets$tag[row]))){
print(tweets$candidate[row])
}
}
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-05")
dateEnd = as.Date("2020-03-06")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-05")
dateEnd = as.Date("2020-03-06")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-05")
dateEnd = as.Date("2020-03-06")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-06")
dateEnd = as.Date("2020-03-07")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
load("~/DScourseS20/TwitterProject/RawTweets/sanders_2020-03-06.Rda")
load("~/DScourseS20/TwitterProject/RawTweets/biden_2020-03-06.Rda")
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-06")
dateEnd = as.Date("2020-03-07")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
load("~/DScourseS20/TwitterProject/RawTweets/sanders_2020-03-06.Rda")
load("~/DScourseS20/TwitterProject/RawTweets/biden_2020-03-06.Rda")
View(candidate_tweets)
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-06")
dateEnd = as.Date("2020-03-07")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-06")
dateEnd = as.Date("2020-03-07")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-06")
dateEnd = as.Date("2020-03-07")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-07")
dateEnd = as.Date("2020-03-08")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-08")
dateEnd = as.Date("2020-03-09")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-09")
dateEnd = as.Date("2020-03-10")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-10")
dateEnd = as.Date("2020-03-11")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-11")
dateEnd = as.Date("2020-03-12")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-12")
dateEnd = as.Date("2020-03-13")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-13")
dateEnd = as.Date("2020-03-14")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
dateEnd = as.Date("2020-03-15")
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-14")
dateEnd = as.Date("2020-03-15")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-15")
dateEnd = as.Date("2020-03-16")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
install.packages("nloptr")
set.seed(100)
X <- matrix(data = rnorm(), nrow = 100000, ncol = 100)
X <- matrix(data = rnorm(100000 * 100), nrow = 100000, ncol = 100)
set.seed(100)
X <- matrix(data = rnorm(100000 * 100), nrow = 100000, ncol = 10)
X[,1] <- 1
View(X)
View(X)
eps <- rnorm(100000,0,0.25)
beta <- c(1.5, -1, -0.25, 0.75, 3.5, -2, 0.5, 1, 1.25, 2)
beta = t(beta)
View(beta)
View(beta)
View(beta)
View(beta)
beta = t(beta)
View(beta)
View(beta)
beta <- c(1.5, -1, -0.25, 0.75, 3.5, -2, 0.5, 1, 1.25, 2)
Y = (X * beta) + eps
betaOLS = ((X * t(X))^-1)*(t(X)*Y)
(X * t(X))^-1
X * t(X)
X
X*X
betaOLS = ((X%*%t(X))^-1)%*%(t(X)%*%Y)
betaOLS = ((X%*%t(X))^-1)*(t(X)%*%Y)
xy <- t(X)%*%Y
xxi <- solve(t(X)%*%X)
betaOLS = xxi%*%xy
lm(Y ~ X -1)
set.seed(100)
X <- matrix(data = rnorm(100000 * 100), nrow = 100000, ncol = 10)
X[,1] <- 1
eps <- rnorm(100000,0,0.25)
beta <- c(1.5, -1, -0.25, 0.75, 3.5, -2, 0.5, 1, 1.25, 2)
Y = (X%*%beta) + eps
xy <- t(X)%*%Y
xxi <- solve(t(X)%*%X)
betaOLSxxxy = xxi%*%xy
library(nloptr)
## Our objective function
objfun <- function(beta,y,X) {
return (sum((y-X%*%beta)^2))
# equivalently, if we want to use matrix algebra:
# return ( crossprod(y-X%*%beta) )
}
## Gradient of our objective function
gradient <- function(beta,Y,X) {
return ( as.vector(-2*t(X)%*%(Y-X%*%beta)) )
}
## initial values
beta0 <- runif(dim(X)[2]) #start at uniform random numbers equal to number of coefficients
## Algorithm parameters
options <- list("algorithm"="NLOPT_LD_LBFGS","xtol_rel"=1.0e-6,"maxeval"=1e3)
## Optimize!
betaOLSgrad <- nloptr( x0=beta0,eval_f=objfun,eval_grad_f=gradient,opts=options,Y=Y,X=X)
library(nloptr)
## Our objective function
objfun <- function(beta,Y,X) {
return (sum((Y-X%*%beta)^2))
# equivalently, if we want to use matrix algebra:
# return ( crossprod(y-X%*%beta) )
}
## Gradient of our objective function
gradient <- function(beta,Y,X) {
return ( as.vector(-2*t(X)%*%(Y-X%*%beta)) )
}
## initial values
beta0 <- runif(dim(X)[2]) #start at uniform random numbers equal to number of coefficients
## Algorithm parameters
options <- list("algorithm"="NLOPT_LD_LBFGS","xtol_rel"=1.0e-6,"maxeval"=1e3)
## Optimize!
betaOLSgrad <- nloptr( x0=beta0,eval_f=objfun,eval_grad_f=gradient,opts=options,Y=Y,X=X)
options <- list("algorithm"="NLOPT_LN_NELDERMEAD","xtol_rel"=1.0e-6,"maxeval"=1e3)
betaOLSnm <- nloptr( x0=beta0,eval_f=objfun,eval_grad_f=gradient,opts=options,Y=Y,X=X)
objfun  <- function(theta,Y,X) {
# need to slice our parameter vector into beta and sigma components
beta    <- theta[1:(length(theta)-1)]
sig     <- theta[length(theta)]
# write objective function as *negative* log likelihood (since NLOPT minimizes)
loglike <- -sum( -.5*(log(2*pi*(sig^2)) + ((Y-X%*%beta)/sig)^2) )
return (loglike)
}
## read in the data
## initial values
theta0 <- runif(dim(X)[2]+1) #start at uniform random numbers equal to number of coefficients
theta0 <- append(as.vector(summary(lm(Sepal.Length~Sepal.Width+Petal.Length+Petal.Width+Species,data=iris))$coefficients[,1]),runif(1))
## Algorithm parameters
options <- list("algorithm"="NLOPT_LN_NELDERMEAD","xtol_rel"=1.0e-6,"maxeval"=1e4)
## Optimize!
betaMLE <- nloptr( x0=theta0,eval_f=objfun,opts=options,Y=Y,X=X)
objfun  <- function(theta,Y,X) {
# need to slice our parameter vector into beta and sigma components
beta1    <- theta[1:(length(theta)-1)]
sig     <- theta[length(theta)]
# write objective function as *negative* log likelihood (since NLOPT minimizes)
loglike <- -sum( -.5*(log(2*pi*(sig^2)) + ((Y-X%*%beta1)/sig)^2) )
return (loglike)
}
## read in the data
## initial values
theta0 <- runif(dim(X)[2]+1) #start at uniform random numbers equal to number of coefficients
## Algorithm parameters
options <- list("algorithm"="NLOPT_LN_NELDERMEAD","xtol_rel"=1.0e-6,"maxeval"=1e4)
## Optimize!
betaMLE <- nloptr( x0=theta0,eval_f=objfun,opts=options,Y=Y,X=X)
library(stargazer)
stargazer(betaOLSxxxy,betaOLSnm,betaOLSgrad,betaMLE)
stargazer(betaOLSlm)
betaOLSlm = lm(Y ~ X -1)
stargazer(betaOLSlm)
source('~/DScourseS20/TwitterProject/get tweets 2.R', echo=TRUE)
source('~/DScourseS20/TwitterProject/get tweets 2.R', echo=TRUE)
source('~/DScourseS20/TwitterProject/get tweets 2.R', echo=TRUE)
library(rtweet)
#Load Candidates
load("~/DScourseS20/TwitterProject/Candidates.Rda")
#Set date range from target start date to date after target end date
dateStart = as.Date("2020-03-25")
dateEnd = as.Date("2020-03-26")
for (row in 1:nrow(tweets)){
if(tweets$dropout[row] > dateStart){
candidate_query = paste0(tweets$handle[row]," -filter:retweets -filter:replies since:",dateStart," until:",dateEnd)
candidate_tweets <- search_tweets(candidate_query, n = 100000, retryonratelimit = TRUE)
save(candidate_tweets,file=paste0("~/DScourseS20/TwitterProject/RawTweets/",tweets$tag[row],"_",dateStart,".Rda"))
}
}
source('~/DScourseS20/TwitterProject/get tweets 2.R', echo=TRUE)
source('~/DScourseS20/TwitterProject/get tweets 2.R', echo=TRUE)
source('~/DScourseS20/TwitterProject/get tweets 2.R', echo=TRUE)
source('~/DScourseS20/TwitterProject/get tweets 2.R', echo=TRUE)
